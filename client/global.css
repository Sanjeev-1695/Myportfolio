@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  /**
   * Tailwind CSS theme
   * tailwind.config.ts expects the following color variables to be expressed as HSL values.
   * A different format will require also updating the theme in tailwind.config.ts.
  */
  :root {
    --background: 222 84% 4.9%;
    --foreground: 210 40% 98%;

    --card: 224 71.4% 4.1%;
    --card-foreground: 210 40% 98%;

    --popover: 224 71.4% 4.1%;
    --popover-foreground: 210 40% 98%;

    --primary: 180 100% 50%;
    --primary-foreground: 222 84% 4.9%;

    --secondary: 215 27.9% 16.9%;
    --secondary-foreground: 210 40% 98%;

    --muted: 215 27.9% 16.9%;
    --muted-foreground: 217.9 10.6% 64.9%;

    --accent: 315 100% 50%;
    --accent-foreground: 210 40% 98%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 180 100% 50%;

    --neon-cyan: 180 100% 50%;
    --neon-green: 120 100% 50%;
    --neon-pink: 315 100% 50%;
    --neon-blue: 240 100% 60%;
    --neon-purple: 270 100% 60%;

    --radius: 0.5rem;

    --sidebar-background: 0 0% 98%;

    --sidebar-foreground: 240 5.3% 26.1%;

    --sidebar-primary: 240 5.9% 10%;

    --sidebar-primary-foreground: 0 0% 98%;

    --sidebar-accent: 240 4.8% 95.9%;

    --sidebar-accent-foreground: 240 5.9% 10%;

    --sidebar-border: 220 13% 91%;

    --sidebar-ring: 217.2 91.2% 59.8%;
  }

  .dark {
    --background: 220 13% 8%;
    --foreground: 210 40% 98%;

    --card: 220 13% 10%;
    --card-foreground: 210 40% 98%;

    --popover: 220 13% 10%;
    --popover-foreground: 210 40% 98%;

    --primary: 180 100% 50%;
    --primary-foreground: 220 13% 8%;

    --secondary: 220 13% 15%;
    --secondary-foreground: 210 40% 98%;

    --muted: 220 13% 15%;
    --muted-foreground: 217.9 10.6% 64.9%;

    --accent: 315 100% 50%;
    --accent-foreground: 210 40% 98%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --border: 220 13% 20%;
    --input: 220 13% 20%;
    --ring: 180 100% 50%;
    --sidebar-background: 240 5.9% 10%;
    --sidebar-foreground: 240 4.8% 95.9%;
    --sidebar-primary: 224.3 76.3% 48%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 240 3.7% 15.9%;
    --sidebar-accent-foreground: 240 4.8% 95.9%;
    --sidebar-border: 240 3.7% 15.9%;
    --sidebar-ring: 217.2 91.2% 59.8%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
    font-family: 'Inter', system-ui, sans-serif;
    background: radial-gradient(ellipse at center, hsl(var(--background)) 0%, hsl(220 13% 5%) 100%);
    overflow-x: hidden;
  }

  html {
    scroll-behavior: smooth;
  }

  /* Enable 3D transforms */
  * {
    transform-style: preserve-3d;
  }
}

@layer utilities {
  .text-gradient {
    @apply bg-gradient-to-r from-cyan-400 via-pink-500 to-purple-500 bg-clip-text text-transparent;
  }

  .neon-text {
    color: hsl(var(--neon-cyan));
    text-shadow:
      0 0 5px hsl(var(--neon-cyan)),
      0 0 10px hsl(var(--neon-cyan)),
      0 0 15px hsl(var(--neon-cyan)),
      0 0 20px hsl(var(--neon-cyan));
  }

  .glass-effect {
    @apply bg-background/20 backdrop-blur-xl border border-cyan-500/20 shadow-2xl;
    box-shadow:
      0 8px 32px rgba(0, 255, 255, 0.1),
      0 0 0 1px rgba(0, 255, 255, 0.2);
  }

  .neon-glow {
    box-shadow:
      0 0 20px hsl(var(--neon-cyan) / 0.5),
      0 0 40px hsl(var(--neon-cyan) / 0.3),
      0 0 60px hsl(var(--neon-cyan) / 0.1);
  }

  .neon-glow-pink {
    box-shadow:
      0 0 20px hsl(var(--neon-pink) / 0.5),
      0 0 40px hsl(var(--neon-pink) / 0.3),
      0 0 60px hsl(var(--neon-pink) / 0.1);
  }

  .neon-glow-green {
    box-shadow:
      0 0 20px hsl(var(--neon-green) / 0.5),
      0 0 40px hsl(var(--neon-green) / 0.3),
      0 0 60px hsl(var(--neon-green) / 0.1);
  }

  .hover-lift-3d {
    @apply transition-all duration-300;
    transform-style: preserve-3d;
  }

  .hover-lift-3d:hover {
    transform: translateY(-20px) rotateX(5deg) rotateY(5deg);
    box-shadow:
      0 25px 50px rgba(0, 255, 255, 0.2),
      0 0 0 1px rgba(0, 255, 255, 0.1);
  }

  .tilt-3d {
    transform: perspective(1000px) rotateX(10deg) rotateY(15deg);
    transition: transform 0.6s ease-out;
  }

  .tilt-3d:hover {
    transform: perspective(1000px) rotateX(0deg) rotateY(0deg) scale(1.05);
  }

  .floating-3d {
    animation: floating3d 6s ease-in-out infinite;
  }

  @keyframes floating3d {
    0%, 100% {
      transform: translateY(0px) rotateX(0deg) rotateY(0deg);
    }
    25% {
      transform: translateY(-20px) rotateX(5deg) rotateY(5deg);
    }
    50% {
      transform: translateY(-10px) rotateX(-5deg) rotateY(10deg);
    }
    75% {
      transform: translateY(-25px) rotateX(3deg) rotateY(-5deg);
    }
  }

  .cyberpunk-border {
    position: relative;
    background: linear-gradient(45deg, transparent 30%, rgba(0, 255, 255, 0.1) 50%, transparent 70%);
    background-size: 200% 200%;
    animation: cyberpunk-border 3s linear infinite;
  }

  .cyberpunk-border::before {
    content: '';
    position: absolute;
    inset: 0;
    padding: 2px;
    background: linear-gradient(45deg,
      hsl(var(--neon-cyan)),
      hsl(var(--neon-pink)),
      hsl(var(--neon-green)),
      hsl(var(--neon-cyan))
    );
    background-size: 300% 300%;
    border-radius: inherit;
    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    mask-composite: xor;
    animation: cyberpunk-glow 2s linear infinite;
  }

  @keyframes cyberpunk-border {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }

  @keyframes cyberpunk-glow {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }

  .scroll-parallax {
    transform-style: preserve-3d;
    will-change: transform;
  }

  .matrix-rain {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      to bottom,
      transparent 0%,
      rgba(0, 255, 255, 0.05) 50%,
      transparent 100%
    );
    animation: matrix-fall 10s linear infinite;
  }

  @keyframes matrix-fall {
    0% { transform: translateY(-100%); }
    100% { transform: translateY(100vh); }
  }

  .hologram {
    background: linear-gradient(
      135deg,
      rgba(0, 255, 255, 0.1) 0%,
      rgba(255, 0, 255, 0.1) 50%,
      rgba(0, 255, 0, 0.1) 100%
    );
    backdrop-filter: blur(20px);
    border: 1px solid rgba(0, 255, 255, 0.3);
    position: relative;
    overflow: hidden;
  }

  .hologram::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(
      45deg,
      transparent 30%,
      rgba(255, 255, 255, 0.1) 50%,
      transparent 70%
    );
    animation: hologram-scan 3s linear infinite;
  }

  @keyframes hologram-scan {
    0% { transform: translateX(-100%) translateY(-100%) rotate(45deg); }
    100% { transform: translateX(100%) translateY(100%) rotate(45deg); }
  }
}
